name: CI

on: [push]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Use the built-in GITHUB_TOKEN

      - uses: php-actions/composer@v6
      
      - name: Run tests with coverage
        run: composer test:coverage-text | tee coverage.txt
      
      - name: Extract coverage percentage
        run: |
          COVERAGE=$(grep -oP '\d+\.\d+(?=\%)' coverage.txt | head -1)
          if [ -z "$COVERAGE" ]; then
            COVERAGE="0"
          fi
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV   

      - name: Determine Badge Color
        run: |
          COVERAGE=${{ env.COVERAGE }}
          COVERAGE_INT=$(printf "%.0f" $COVERAGE) # Round to nearest integer
          if [ "$COVERAGE_INT" -ge 80 ]; then
            echo "COLOR=green" >> $GITHUB_ENV
          elif [ "$COVERAGE_INT" -ge 70 ]; then
            echo "COLOR=yellow" >> $GITHUB_ENV
          else
            echo "COLOR=red" >> $GITHUB_ENV
          fi

      - name: Generate coverage badge
        run: |
          echo "{\"schemaVersion\": 1, \"label\": \"coverage\", \"message\": \"${{ env.COVERAGE }}%\", \"color\": \"${{ env.COLOR }}\"}" > coverage.json

      - name: Force commit coverage.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -f coverage.json  # Force add coverage.json to staging
          git commit -m "Force update coverage.json" || echo "Nothing to commit"
          git push origin HEAD || echo "Nothing to push"
