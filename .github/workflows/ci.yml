name: Auto Version

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'version.json'
      - 'README.md'

jobs:
  version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Get current version
        id: version
        run: |
          if [ -f version.json ]; then
            current_version=$(cat version.json | jq -r .version)
          else
            current_version="0.0.0"
          fi
          echo "current_version=$current_version" >> $GITHUB_ENV
          
      - name: Calculate new version
        run: |
          IFS='.' read -r -a version_parts <<< "${{ env.current_version }}"
          patch=$((version_parts[2] + 1))
          if [ $patch -gt 9 ]; then
            patch=0
            minor=$((version_parts[1] + 1))
            major=${version_parts[0]}
          else
            minor=${version_parts[1]}
            major=${version_parts[0]}
          fi
          new_version="$major.$minor.$patch"
          echo "new_version=$new_version" >> $GITHUB_ENV
          
      - name: Update version files
        run: |
          echo "{\"version\": \"${{ env.new_version }}\"}" > version.json
          
      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add version.json
          git commit -m "chore: bump version to ${{ env.new_version }}" || exit 0
          git tag "v${{ env.new_version }}"
          git push
          git push --tags